import textwrap

# Lista de usu√°rios e contas
usuarios = []
contas = []

# ---------- FUN√á√ïES DE OPERA√á√ïES BANC√ÅRIAS ----------

# DEP√ìSITO ‚Äî argumentos mistos (positional-only e keyword-only)
def deposito(saldo, valor, /, *, extrato):
    if valor > 0:
        saldo += valor
        extrato += f"Dep√≥sito: R$ {valor:.2f}\n"
        print("‚úÖ Dep√≥sito realizado com sucesso!")
    else:
        print("‚ùå Valor inv√°lido para dep√≥sito.")
    return saldo, extrato

# SAQUE ‚Äî todos os argumentos keyword-only
def saque(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    if valor <= 0:
        print("‚ùå Valor inv√°lido.")
    elif valor > saldo:
        print("‚ùå Saldo insuficiente.")
    elif valor > limite:
        print("‚ùå Valor do saque excede o limite.")
    elif numero_saques >= limite_saques:
        print("‚ùå N√∫mero m√°ximo de saques atingido.")
    else:
        saldo -= valor
        extrato += f"Saque: R$ {valor:.2f}\n"
        numero_saques += 1
        print("‚úÖ Saque realizado com sucesso!")
    return saldo, extrato, numero_saques

# EXTRATO
def exibir_extrato(saldo, /, *, extrato):
    print("\n====== EXTRATO ======")
    print(extrato if extrato else "Nenhuma movimenta√ß√£o.")
    print(f"Saldo atual: R$ {saldo:.2f}")
    print("=====================\n")

# ---------- FUN√á√ïES DE USU√ÅRIO E CONTA ----------

# Buscar usu√°rio pelo CPF
def filtrar_usuario(cpf, usuarios):
    return next((usuario for usuario in usuarios if usuario["cpf"] == cpf), None)

# Cadastrar novo usu√°rio
def cadastrar_usuario(usuarios):
    cpf = input("Informe o CPF (somente n√∫meros): ").strip()

    # Verifica se s√≥ tem n√∫meros e se n√£o est√° duplicado
    if not cpf.isdigit():
        print("‚ùå CPF inv√°lido.")
        return
    if filtrar_usuario(cpf, usuarios):
        print("‚ùå J√° existe um usu√°rio com esse CPF.")
        return

    nome = input("Nome completo: ").strip()
    data_nascimento = input("Data de nascimento (dd-mm-aaaa): ").strip()
    endereco = input("Endere√ßo (logradouro - bairro - cidade/UF): ").strip()

    usuarios.append({
        "nome": nome,
        "data_nascimento": data_nascimento,
        "cpf": cpf,
        "endereco": endereco
    })
    print("‚úÖ Usu√°rio cadastrado com sucesso!")

# Cadastrar nova conta banc√°ria
def cadastrar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usu√°rio: ").strip()
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        contas.append({
            "agencia": agencia,
            "numero_conta": numero_conta,
            "usuario": usuario
        })
        print("‚úÖ Conta criada com sucesso!")
    else:
        print("‚ùå Usu√°rio n√£o encontrado. Cadastre-o primeiro.")

# ---------- PROGRAMA PRINCIPAL ----------

def main():
    AGENCIA = "0001"
    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    LIMITE_SAQUES = 3
    numero_conta = 1

    while True:
        opcao = input(textwrap.dedent("""
        ======== MENU ========
        [d] Depositar
        [s] Sacar
        [e] Extrato
        [nu] Novo Usu√°rio
        [nc] Nova Conta
        [q] Sair
        => """)).lower()

        if opcao == "d":
            valor = float(input("Valor do dep√≥sito: "))
            saldo, extrato = deposito(saldo, valor, extrato=extrato)

        elif opcao == "s":
            valor = float(input("Valor do saque: "))
            saldo, extrato, numero_saques = saque(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "nu":
            cadastrar_usuario(usuarios)

        elif opcao == "nc":
            cadastrar_conta(AGENCIA, numero_conta, usuarios)
            numero_conta += 1

        elif opcao == "q":
            print("üëã Saindo...")
            break

        else:
            print("‚ùå Op√ß√£o inv√°lida!")

# Executa o sistema
main()
